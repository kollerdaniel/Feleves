<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SkiRental.Program</name>
    </assembly>
    <members>
        <member name="T:SkiRental.Program.Factory">
            <summary>
            It instantiates the repositories, the logic classes and the menu.
            </summary>
        </member>
        <member name="M:SkiRental.Program.Factory.Start">
            <summary>
            This is a method to handle the menu.
            </summary>
        </member>
        <member name="T:SkiRental.Program.MainProgram">
            <summary>
            This is the main program.
            </summary>
        </member>
        <member name="T:SkiRental.Program.MenuMethods">
            <summary>
            This is a class for the methods that menu uses.
            </summary>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ListAllC(SkiRental.Logic.CustomerLogic)">
            <summary>
            This method lists all the customers.
            </summary>
            <param name="customerLogic">Logic for Customers repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ListAllO(SkiRental.Logic.ShopLogic)">
            <summary>
            This method lists all the Orders.
            </summary>
            <param name="shopL">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ListAllS(SkiRental.Logic.ShopLogic)">
            <summary>
            This method lists all the Ski equipments.
            </summary>
            <param name="shopL">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.GetOneCustomer(SkiRental.Logic.CustomerLogic)">
            <summary>
            This method lists one of the customers.
            </summary>
            <param name="customerLogic">Logic for Customers repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.GetOneOrder(SkiRental.Logic.ShopLogic)">
            <summary>
            This method lists one of the Orders.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.GetOneEquipment(SkiRental.Logic.ShopLogic)">
            <summary>
            This method lists one of the Ski equipments.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ChangePassword(SkiRental.Logic.CustomerLogic)">
            <summary>
            This lists the password changing method.
            </summary>
            <param name="customerLogic">Logic for Customers repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ChangePrice(SkiRental.Logic.ShopLogic)">
            <summary>
            This lists the price changing method.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ChangePayment(SkiRental.Logic.ShopLogic)">
            <summary>
            This lists the payment method changing method.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.DeleteCustomer(SkiRental.Logic.CustomerLogic)">
            <summary>
            This is the customer eraser menu method.
            </summary>
            <param name="customerLogic">Customer logic class.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.DeleteOrder(SkiRental.Logic.ShopLogic)">
            <summary>
            This is the order eraser menu method.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.DeleteEquipment(SkiRental.Logic.ShopLogic)">
            <summary>
            This is the order eraser menu method.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.InsertCustomer(SkiRental.Logic.CustomerLogic)">
            <summary>
            It asks about customer datas.
            </summary>
            <param name="customer">Customer logic.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.InsterOrder(SkiRental.Logic.ShopLogic)">
            <summary>
            It asks about order datas.
            </summary>
            <param name="shop">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.InsterEquipment(SkiRental.Logic.ShopLogic)">
            <summary>
            It asks about equipment datas.
            </summary>
            <param name="shop">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.PaidHead(SkiRental.Logic.ShopLogic)">
            <summary>
            It lists all the Head skis for which they have already been paid.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.PaidHeadAsync(SkiRental.Logic.ShopLogic)">
            <summary>
            Writes out with task, all the Head skis for which they have already been paid.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.PromotionOver170(SkiRental.Logic.ShopLogic)">
            <summary>
            It lists all the skis, that have promotion.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.PromotionOver170Async(SkiRental.Logic.ShopLogic)">
            <summary>
            Writes out with task, all the skis, that have promotion.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.BeginnersWithCreditCard(SkiRental.Logic.ShopLogic)">
            <summary>
            Lists all the beginner customers who use credit card.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.BeginnersWithCreditCardAsync(SkiRental.Logic.ShopLogic)">
            <summary>
            Lists with task, all the beginner customers who use credit card.
            </summary>
            <param name="shopLogic">Logic for Orders repository and SkiEqupments repository.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.ToConsole(System.String)">
            <summary>
            I can avoid Console.Writeline with this method.
            </summary>
            <param name="outString">A string.</param>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.IntParse(System.String)">
            <summary>
            It converts the string value into integer.
            </summary>
            <returns>An integer.</returns>
        </member>
        <member name="M:SkiRental.Program.MenuMethods.DateParse(System.String)">
            <summary>
            It converts the string value into DateTime.
            </summary>
            <returns>An date time.</returns>
        </member>
    </members>
</doc>
